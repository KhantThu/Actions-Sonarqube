name: CICD Pipeline For 

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  security-check:
    needs: compile
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Trivy Installation
        run: |
          sudo apt-get install wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
        
      - name: Trivy FS scan
        run: trivy fs --format table -o fs-report.json .

      - name: Gitleak Installation
        run: sudo apt install gitleaks -y

      - name: Gitleak Code scan
        run: gitleaks detect source . gitleaks-report.json -f json

  test:
    needs: compile
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5     

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Unit test case  
        run: mvn test

  build_project_and_sonar_scan:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5     

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Project
        run: mvn package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar 
          path: target/*.jar
        
      
      - uses: actions/checkout@v5 
        with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_docker_image_and_push:
    needs: build_project_and_sonar_scan
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5     

      - name: Download JAR Artifact
        uses: actions/download-artifact@v5
        with:
          name: app-jar 
          path: app  #This will download jar to /.app folder

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: khantthu/mmshop-product-api:latest
          file: ./Dockerfile